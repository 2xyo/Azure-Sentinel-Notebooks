"Sentinel - Get Configuration parameters": {
    "prefix": ["get-sentinelconfiguration", "get-sentinelconfig"],
    "body": [
		"####################################################",
		"# Sentinel - Get Sentinel Configuration parameters #",
		"####################################################",
		"import json",
		"def read_config_values(file_path):",
		"	'This loads pre-generated parameters for Azure Sentinel Workspace'",
		"	with open(file_path) as json_file:",
		"		if json_file:",
		"			json_config = json.load(json_file)",
		"			return (json_config['tenant_id'],",
		"					json_config['subscription_id'],",
		"					json_config['resource_group'],",
		"					json_config['workspace_id'],",
		"					json_config['workspace_name'])",
		"	return None",
		" ",
		"# Calling the above function to populate Sentinel workspace parameters",
		"# The file, config.json, was generated by the system, however, you may modify the values, or manually set the variables",
		"tenant_id, subscription_id, resource_group, workspace_id, workspace_name = read_config_values('config.json')"
    ],
    "description": "Get Azure Sentinel configuration parameters from config.json"
}



"Sentinel - Set up environment for msticpy": {
    "prefix": ["setup-msticpy"],
    "body": [
		"#####################################################",
		"# Sentinel - Set up environment for msticpy         #",
		"#####################################################",
		"from pathlib import Path",
		"import os",
		"import sys",
		"import warnings",
		"from IPython.display import display, HTML, Markdown",
		" ",
		"REQ_PYTHON_VER=(3, 6)",
		"REQ_MSTICPY_VER=(0, 6, 0)",
		" ",
		"display(HTML('<h3>Starting Notebook setup...</h3>'))",
		"# If you did not clone the entire Azure-Sentinel-Notebooks repo you may not have this file",
		"if Path('./utils/nb_check.py').is_file():",
		"	from utils.nb_check import check_python_ver, check_mp_ver",
		" ",
		"	check_python_ver(min_py_ver=REQ_PYTHON_VER)",
		"	try:",
		"		check_mp_ver(min_msticpy_ver=REQ_MSTICPY_VER)",
		"	except ImportError:",
		"		!pip install --upgrade msticpy",
		"		if 'msticpy' in sys.modules:",
		"			importlib.reload(sys.modules['msticpy'])",
		"		else:",
		"			import msticpy",
		"		check_mp_ver(REQ_MSTICPY_VER)",
		" ",
		"from msticpy.nbtools import nbinit",
		"nbinit.init_notebook(",
		"	namespace=globals(),",
		"	extra_imports=['ipwhois, IPWhois', 'urllib.request, urlretrieve', 'yaml']",
		")"
    ],
    "description": "Set up the execution environment for msticpy"
}

"Sentinel - Authenticate into Azure resources": {
    "prefix": ["azure-login"],
    "body": [
		"####################################################",
		"# Sentinel - Authenticate into Azure resources     #",
		"####################################################",
		"# Azure CLI is used to get device code to login into Azure, you need to copy the code and open the DeviceLogin site.",
		"!az login --use-device-code"
    ],
    "description": "Using AZCLI to login to Azure resources"
}

"Sentinel - Authenticate into Azure Log Analytics": {
    "prefix": ["login-loganalytics"],
    "body": [
		"####################################################",
		"# Sentinel - Authenticate into Azure Log Analytics #",
		"####################################################",
		"# Azure CLI is used to get device code to login into Azure, you need to copy the code and open the DeviceLogin site.",
		"# !!! You need [tenant_id] and [subscription_id] to login into Azure !!!",
		"from azure.common.client_factory import get_client_from_cli_profile",
		"from azure.loganalytics import LogAnalyticsDataClient",
		" ",
		"!az login --tenant $tenant_id --use-device-code",
		"la_client = get_client_from_cli_profile(LogAnalyticsManagementClient, subscription_id = subscription_id)",
		"creds, _ = get_azure_cli_credentials(resource='https://api.loganalytics.io')",
		"la_data_client = LogAnalyticsDataClient(creds)",
		" ",
		"# Query sample: Table Name=AzureActivity, need [workspace_id]",
		"# all_columns_query = 'AzureActivity | getschema | project ColumnName | order by ColumnName asc'",
		"# columns_result = la_data_client.query(workspace_id, QueryBody(query=all_columns_query))"
    ],
    "description": "Using AZCLI to login to Azure Log Analytics"
}



